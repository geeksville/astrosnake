# Main entrypoint of the workflow.
# Please follow the best practices:
# https://snakemake.readthedocs.io/en/stable/snakefiles/best_practices.html,
# in particular regarding the standardized folder structure mentioned there.


# load configuration
# -----------------------------------------------------
configfile: "config/config.yaml"


# load rules
# -----------------------------------------------------
# include: "rules/common.smk"
# include: "rules/process_reads.smk"

# optional messages, log and error handling
# -----------------------------------------------------
onstart:
    print("\n--- Analysis started ---\n")


onsuccess:
    print("\n--- Workflow finished! ---\n")


onerror:
    print("\n--- An error occurred! ---\n")


import os
import shutil
import textwrap
from glob import glob

def siril_run(cwd, commands):
    shell(textwrap.dedent("""
        org.siril.Siril -d {cwd} -s - << 'EOF'
        requires 1.3.4
        {commands}
        EOF
        """))

def siril_run_on_files(input_files, process_dir, commands):
    # Create a temporary directory for processing
    temp_dir = os.path.join(process_dir, "siril_temp")
    if os.path.exists(temp_dir):
        shutil.rmtree(temp_dir)
    os.makedirs(temp_dir)

    # Create symbolic links for all input files in the temp directory
    for f in input_files:
        os.symlink(os.path.abspath(str(f)), os.path.join(temp_dir, os.path.basename(str(f))))

    # Run Siril commands in the temporary directory
    siril_run(temp_dir, commands)

rule mastertools_make_bias:
    input:
        # files of the form "/images/from_astroboy/masters-raw/{date}/BIAS/{date}_{time}_{filter}_{temp}_{secs}_{index}.fits"
        # Use a lambda function to find all files for the given date wildcard
        lambda wildcards: glob(
             f"{config["paths"]["masters_raw"]}/{wildcards.date}/BIAS/{wildcards.date}_*.fits"
        )        
    output:
        f"{config["paths"]["masters"]}" "/biases/{date}/bias_stacked.fits"
    run:
        # Making bias from /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-44_Dark_-10.10_0.00s_0000.fits /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-45_Dark_-10.10_0.00s_0001.fits /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-46_Dark_-10.10_0.00s_0002.fits /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-46_Dark_-10.10_0.00s_0003.fits /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-48_Dark_-10.10_0.00s_0004.fits /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-51_Dark_-10.00_0.00s_0005.fits /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-55_Dark_-9.90_
        process_dir=config["paths"]["siril_work"]+"/process"

        siril_run_on_files(input, process_dir, textwrap.dedent(f"""
            # Convert Bias Frames to .fit files
            link bias -out={process_dir}
            cd {process_dir}

            # Stack Bias Frames to bias_stacked.fit
            stack bias rej 3 3 -nonorm -out={output}
            """))

# target rules
# -----------------------------------------------------
rule all:
    input:
        # process /images/from_astroboy/masters-raw/2025-09-09/BIAS/2025-09-09_20-31-46_Dark_-10.10_0.00s_0002.fits
        f"{config["paths"]["masters"]}/biases/2025-09-09/bias_stacked.fits"
        # expand("{siril_work}/fixme.txt", siril_work=config["paths"]["siril_work"])
    default_target: True
